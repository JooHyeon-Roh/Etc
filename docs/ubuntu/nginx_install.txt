[nginx 설치]
	- wget http://nginx.org/keys/nginx_signing.key
	- apt-key add nginx_signing.key
	- vim /etc/apt/sources.list.d/nginx.list
		deb [arch=amd64] http://nginx.org/packages/mainline/ubuntu/ bionic nginx
		deb-src http://nginx.org/packages/mainline/ubuntu/ bionic nginx

	- apt-get update
	- apt-get install nginx


[php nginx 연동]
	- vim /etc/nginx/conf.d/default.conf
	
		server {
			charset UTF-8;
			listen 80;
			listen [::]:80;
			server_name 192.168.0.110;
			#root   /usr/share/nginx/html;
			client_max_body_size 100M;
			index index.php index.html index.htm index.nginx-debian.html;

			location / {
				#root   /home/dev_web/public_html/;
				try_files $uri $uri/ /index.php?$query_string;
			}

			location ~ \.php$ {
				root /home/dev_web/public_html/;
				fastcgi_pass   unix:/run/php/php7.2-fpm.sock;
				fastcgi_index  index.php;
				fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
				include        fastcgi_params;
			}

			location /data {
				add_header 'Access-Control-Allow-Origin' '*';
				add_header 'Access-Control-Allow-Methods' 'POST, OPTIONS';
				add_header 'Access-Control-Allow-Headers' 'Accept,X-Requested-With,Content-Type,Origin';

				if ($request_method = 'OPTIONS') {
					add_header 'Access-Control-Allow-Origin' '*';
					add_header 'Access-Control-Allow-Headers' 'Accept, Origin, X-Requested-With, Keep-Alive, Content-Type';
					add_header 'Access-Control-Allow-Methods' 'POST, OPTIONS';
					add_header 'Content-Type' 'application/json charset=UTF-8';
					return 204;
				}

				proxy_pass http://192.168.0.130:10000;
				proxy_set_header X-Real-IP $remote_addr;
				proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
				proxy_set_header X-NginX-Proxy true;
				proxy_ssl_session_reuse off;
				proxy_set_header Host $http_host;
				proxy_redirect off;
			}

			location ~ /\. {
				deny all;
			}
		}


[nginx 설정]
	- cd /etc/nginx/conf.d
	- cp default.conf default_20170315
	- vim default.conf
	
		server {
			listen 80;
			listen [::]:80;
			server_name 192.168.0.130;

			charset UTF-8;
			access_log  /var/log/nginx/$http_host.access.log  main;

			location / {
				proxy_set_header X-Real-IP $remote_addr;
				proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
				proxy_set_header Host $http_host;
				proxy_set_header X-NginX-Proxy true;

				proxy_pass http://127.0.0.1:10000/;
				proxy_redirect off;
			}

			#error_page  404              /404.html;

			# redirect server error pages to the static page /50x.html
			#
			error_page   500 502 503 504  /50x.html;
			location = /50x.html {
			root   /usr/share/nginx/html;
			}
		}
		
		
		server {
			charset UTF-8;
			listen 80;
			listen [::]:80;
			server_name 192.168.0.130;
			root   /usr/share/nginx/html;
			client_max_body_size 100M;

			location / {
				root   /home/dev/ajax_test/;
				index  index.html index.htm;
			}

			location /koa {
				add_header 'Access-Control-Allow-Origin' '*';
				add_header 'Access-Control-Allow-Methods' 'POST, OPTIONS';
				add_header 'Access-Control-Allow-Headers' 'Accept,X-Requested-With,Content-Type,Origin';

				if ($request_method = 'OPTIONS') {
					add_header 'Access-Control-Allow-Origin' '*';
					add_header 'Access-Control-Allow-Headers' 'Accept, Origin, X-Requested-With, Keep-Alive, Content-Type';
					add_header 'Access-Control-Allow-Methods' 'POST, OPTIONS';
					add_header 'Content-Type' 'application/json charset=UTF-8';
					return 204;
				}

				proxy_pass http://192.168.0.130:11000;
				proxy_set_header X-Real-IP $remote_addr;
				proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
				proxy_set_header X-NginX-Proxy true;
				proxy_ssl_session_reuse off;
				proxy_set_header Host $http_host;
				proxy_redirect off;
			}

			location /upload {
				add_header 'Access-Control-Allow-Origin' '*';

				proxy_pass http://192.168.0.130:3000;
				proxy_set_header X-Real-IP $remote_addr;
				proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
				proxy_set_header X-NginX-Proxy true;
				proxy_ssl_session_reuse off;
				proxy_set_header Host $http_host;
				proxy_redirect off;
			}

			location /koa_admin {
				add_header 'Access-Control-Allow-Origin' '*';
				add_header 'Access-Control-Allow-Methods' 'POST, OPTIONS';
				add_header 'Access-Control-Allow-Headers' 'Accept,X-Requested-With,Content-Type,Origin';

				if ($request_method = 'OPTIONS') {
					add_header 'Access-Control-Allow-Origin' '*';
					add_header 'Access-Control-Allow-Headers' 'Accept, Origin, X-Requested-With, Keep-Alive, Content-Type';
					add_header 'Access-Control-Allow-Methods' 'POST, OPTIONS';
					add_header 'Content-Type' 'application/json charset=UTF-8';
					return 204;
				}

				proxy_pass http://192.168.0.130:12000;
				proxy_set_header X-Real-IP $remote_addr;
				proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
				proxy_set_header X-NginX-Proxy true;
				proxy_ssl_session_reuse off;
				proxy_set_header Host $http_host;
				proxy_redirect off;
			}

			location ~ /\. {
				deny all;
			}
		}
	- service nginx restart
	
	
	
ssl 인증서 등록시

SSL 인증서 발급 기관이 브라우저에 기본 포함되지 않아서 SSL 경로를 못 찾을 경우가 있다.

아파치 httpd 에는 이런 용도로 SSLCACertificateFile 라는 지시자가 있지만 nginx 에는 없으므로 다음과 같이 SSL 인증서와 CA 인증서를 하나의 파일로 만들어야 한다.

 cat /etc/pki/tls/certs/lesstif.com.crt /etc/pki/tls/certs/lesstif-root.crt > /etc/pki/tls/certs/lesstif.com.chained.crt


server {
	charset UTF-8;
	listen 80;
	listen [::]:80;
	server_name www.bdpartners.co.kr;
	
	rewrite ^ https://$server_name$request_uri? permanent;
}

server {
	charset UTF-8;
	listen 443 ssl;
	listen [::]:443 ssl;
	server_name www.bdpartners.co.kr;
	#root   /usr/share/nginx/html;
	client_max_body_size 1024M;
	client_body_buffer_size 1024M;
	index index.php index.html index.htm index.nginx-debian.html;
	
	#ssl on;
	ssl_certificate /etc/ssl/certs/bdpartners_co_kr.crt;
	ssl_certificate_key /etc/ssl/private/bdpartners_co_kr.key;
	ssl_trusted_certificate /etc/ssl/certs/ChainCA.crt;
	
	ssl_session_timeout 5m;
	ssl_protocols SSLv2 SSLv3 TLSv1.2;
	ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
	ssl_session_tickets off;
	ssl_prefer_server_ciphers on;
	ssl_ecdh_curve secp384r1;
	
	location / {
		root   /home/prod_web/public_html/;
		try_files $uri $uri/ /index.php?$query_string;
	}
	
	location ~ \.php$ {
		root /home/prod_web/public_html/;
		fastcgi_pass   unix:/run/php/php7.2-fpm.sock;
		fastcgi_index  index.php;
		fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
		include        fastcgi_params;
	}
	
	location /api {
		add_header 'Access-Control-Allow-Origin' '*';
		add_header 'Access-Control-Allow-Methods' 'POST, OPTIONS';
		add_header 'Access-Control-Allow-Headers' 'Accept,X-Requested-With,Content-Type,Origin';
	
		if ($request_method = 'OPTIONS') {
			add_header 'Access-Control-Allow-Origin' '*';
			add_header 'Access-Control-Allow-Headers' 'Accept, Origin, X-Requested-With, Keep-Alive, Content-Type';
			add_header 'Access-Control-Allow-Methods' 'POST, OPTIONS';
			add_header 'Content-Type' 'application/json charset=UTF-8';
			return 204;
		}
	
		proxy_pass http://127.0.0.1:3000;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-NginX-Proxy true;
		proxy_ssl_session_reuse off;
		proxy_set_header Host $http_host;
		proxy_redirect off;
	}
	
	location ~ /\. {
		deny all;
	}
}

[nginx 사용자 실행]

- vim /home/dev_web/nginx.conf

cd /home/dev_web/
mkdir nginx
cd nginx
mkdir conf.d
mkdir log
mkdir client_body
mkdir proxy_temp
mkdir fastcgi_temp
mkdir uwsgi_temp
mkdir scgi_temp
mkdir tmp


vim nginx.conf

worker_processes 1;
error_log /home/dev_web/nginx/log/nginx-error_log.log;
pid /home/dev_web/nginx/tmp/nginx.pid;

events {
        worker_connections  1024;
}

http {
        include /home/dev_web/nginx/mime.types;
        default_type  application/octet-stream;
        index index.html index.htm index.php;
        client_body_temp_path /home/dev_web/nginx/client_body;
        proxy_temp_path /home/dev_web/nginx/proxy_temp;
        fastcgi_temp_path /home/dev_web/nginx/fastcgi_temp;
        uwsgi_temp_path /home/dev_web/nginx/uwsgi_temp;
        scgi_temp_path /home/dev_web/nginx/scgi_temp;

        sendfile on;

        #tcp_nopush on;
        #tcp_nodelay on;
        #keepalive_timeout 65;
        #types_hash_max_size 2048;
        #gzip  on;

        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                                        '$status $body_bytes_sent "$http_referer" '
                                        '"$http_user_agent" "$http_x_forwarded_for" "$http_cookie" "$sent_http_content_type"';

        access_log /home/dev_web/nginx/log/nginx-access.log main buffer=32k;

        include /home/dev_web/nginx/conf.d/*.conf;
}

cd conf.d
vim defualt.conf

server {
	charset UTF-8;
	listen 80;
	listen [::]:80;
	server_name  ;
	client_max_body_size 100M;
	index index.php index.html index.htm index.nginx-debian.html;
	
	location / {
		root   /home/dev_web/public_html/;
		try_files $uri $uri/ /index.php?$query_string;
	}
	
	#error_page  404              /404.html;
	
	# redirect server error pages to the static page /50x.html
	#
	error_page   500 502 503 504  /50x.html;
	location = /50x.html {
		root   /usr/share/nginx/html;
	}
	
	location ~ \.php$ {
		root /home/dev_web/public_html/;
		fastcgi_pass   unix:/run/php/php7.2-fpm.sock;
		fastcgi_index  index.php;
		fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
		include        fastcgi_params;
	}
	
	location ~ /\. {
		deny all;
	}
}

- /etc/nginx폴더에있는 환경설정파일 복사 -> /home/dev_web

/usr/sbin/nginx -c /home/dev_web/nginx.conf

- php연동시에는 php-fpm 사용 계정을 dev_web으로 변경


일반유저가 1024이하 포트를 사용하려면

- e : effective -> 효력부여
- p : Permitted -> 허용
- i : Inheritable -> exec 할 때 권한 상속 여부

setcap 'cap_net_bind_service=+ep' /usr/sbin/nginx
getcap /usr/sbin/nginx
setcap -r /usr/sbin/nginx (설정 빼기)
