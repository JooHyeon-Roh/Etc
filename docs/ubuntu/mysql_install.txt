1. mariadb 설치 및 확인
	- apt-get install mariadb-server
	- systemctl status mariadb
	- 설치 및 설정 완료 후 업데이트
	- apt-get install software-properties-common
	- apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xF1656F24C74CD1D8
	- add-apt-repository "deb [arch=amd64,arm64,ppc64el] http://mariadb.mirror.liquidtelecom.com/repo/10.4/ubuntu $(lsb_release -cs) main"
	- apt update
	- apt-get install mariadb-server mariadb-client
	- mysql_upgrade -u root -p
	- service mysql restart
	- systemctl status mariadb

2. mariadb 보안설정
	- mysql_secure_installation
	- root 패스워드가 없어 엔터로 넘긴 후 root 패스워드를 설정해준다
	- Remove anonymous users? [Y/n]  y (익명의 사용자 제한)
	- Disallow root login remotely? [Y/n]  n (원격에서 root 로그인 허용)
	- Remove test database and access to it? [Y/n] y (테스트 데이터 베이스 생성) 
	- Reload privilege tables now? [Y/n]  y (지금까지 설정한 내용 적용)

3. mysql 언어셋 및 시간 설정
	- vim /etc/mysql/mariadb.cnf
	- (아래내용 작성후 저장)

		[mysqld]
		#master master slave 설정시에만 master에 적용
		server_id         = 15
		log_bin           = binary_log
		sync_binlog       = 1
		binlog_cache_size = 5M
		max_binlog_size   = 512M
		expire_logs_days  = 14
		log_bin_trust_function_creators = 1
		binlog_format     = mixed
	
		#slave master slave 설정시에만 slave에 적용
		server_id         = 16
		relay_log         = relay_log
		relay_log_purge   = TRUE
		read_only

		#slow log
		slow_query_log = 1
		slow_query_log_file = /var/log/mariadb/mariadb-slow.log
		long_query_time = 1
		log_slow_rate_limit = 1
		log_slow_verbosity = query_plan
		log_slow_admin_statements

		event_scheduler = ON

		character_set_server=utf8
		collation_server=utf8_general_ci
		init_connect=set collation_connection=utf8_general_ci
		init_connect=set names utf8
		character-set-server=utf8
		character-set-client-handshake = TRUE
		interactive_timeout=315360000
		wait_timeout=315360000
		max_connections = 1024
		max_allowed_packet=16M

		transaction_isolation = READ-COMMITTED

		log-error=/var/log/mariadb/mariadb-error.log
		
		sql_mode="NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION"
		
		#default_time_zone="+00:00" #DB 시간 설정

		[mysqldump]
		default-character-set = utf8

		[mysql]
		default-character-set = utf8

		[mysqld_safe]
		log-error=/var/log/mariadb/mariadb.log
		pid-file=/var/run/mariadb/mariadb.pid

	- mkdir /var/log/mariadb
	- chown mysql.mysql /var/log/mariadb

	- vim /etc/mysql/mariadb.conf.d/50-server.cnf (주석처리 필요 / 외부접속)
		#bind-address   = 127.0.0.1

4. mysql 계정 설정 관련 명령어
	- mysql -u root -p;
	- root 패스워드 변경
		= use mysql;
		= update user set plugin='' where User='root';
		= ALTER USER root@localhost IDENTIFIED VIA mysql_native_password USING PASSWORD("L7.[^Mzs+j2=9K8hbVXq") //위 명령어가 안될시
		= update user set password=password('password') where user='root';
		= flush privileges;
		
	- database 생성 및 계정 설정
		= CREATE DATABASE database;
		= GRANT ALL PRIVILEGES ON database.* TO dev@localhost IDENTIFIED BY 'password';
		
	- 읽기 전용 계정 설정
		= CREATE USER readonlyuser@localhost IDENTIFIED BY 'password'; 
		= GRANT SELECT ON database.* TO readonlyuser@localhost;
		
	- 계정 삭제 
		= DLETE FROM USER WHERE USER='userid' and Host='%';
		= drop user userid@localhost;
		= flush privileges;

	- mysql 복제 계정 생성
		= show master status;
		= CREATE USER 'userid'@'%' IDENTIFIED BY 'password';
		= GRANT REPLICATION SLAVE ON *.* TO 'userid'@'%';
		= show master status;

	- master mysql 을 덤프
		= mysqldump -u root -p --opt --single-transaction --hex-blob --master-data=2 --routines --triggers --all-databases > master.sql

	- master.sql을 슬레이브 서버로 복사
		= scp 192.168.0.100:/path/master.sql ./
		= master.sql을 열어서 아래와 비슷한 문장을 찾는다
		= -- CHANGE MASTER TO MASTER_LOG_FILE='binary_log.000001', MASTER_LOG_POS=5497;

	- slave mysql root로 slave 설정
		= use mysql;
		= SOURCE /path/master.sql;
		= CHANGE MASTER TO MASTER_LOG_FILE='binary_log.000001', MASTER_LOG_POS=5497, master_host='192.168.0.100', master_port=3306, master_user='userid', master_password='password';
		= show slave status\g;
		= start slave;
		= netstat -an|grep 3306

	- slave reset
		= RESET SLAVE;
		= CHANGE MASTER TO MASTER_LOG_FILE=binary_log.000019, MASTER_LOG_POS=15172, master_host='192.168.0.100', master_port=3306, master_user='userid', master_password='password';
		= START SLAVE;
		
*참고사항
	최신버전 mysql 관련 설정 변경
	MySQL Query Excute failed]-[1365] Error Meassage : Division by 0 발생시
	
	strict mode : ERROR_FOR_DIVISION_BY_ZERO enable -> disable로 바꿔야 함
	vi /etc/mysql/mariadb.cnf
	[mysqld]
	sql_mode="NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION"
	#sql_mode="IGNORE_SPACE,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION"

	MariaDB [(none)]> show variables like 'sql_mode';
	MariaDB [(none)]> set sql_mode='';
	MariaDB [(none)]> show variables like 'sql_mode';
	MariaDB [(none)]> set sql_mode='NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';
	MariaDB [(none)]> show variables like 'sql_mode';

5. mysql 최신버전 설치 (8.0)
	- wget https://dev.mysql.com/get/mysql-apt-config_0.8.15-1_all.deb
	- dpkg -i mysql-apt-config_0.8.15-1_all.deb => OK 선택
	- apt-get update
	- apt-get install mysql-server => 패스워드 => Use Strong Password Encrypthon 선택
	
	- 나머지 동일
	
	mysql_secure_installation

	Securing the MySQL server deployment.

	Enter password for user root: 

	VALIDATE PASSWORD COMPONENT can be used to test passwords
	and improve security. It checks the strength of password
	and allows the users to set only those passwords which are
	secure enough. Would you like to setup VALIDATE PASSWORD component?

	Press y|Y for Yes, any other key for No: N
	Using existing password for root.
	Change the password for root ? ((Press y|Y for Yes, any other key for No) : N

	
	
	
	
